[build]
builder = "nixpacks"
# Alternative: Use "dockerfile" if Nixpacks has npm/npx conflicts
# builder = "dockerfile"
buildCommand = "composer install --optimize-autoloader --no-dev --no-interaction && npm ci && npm run build"

[deploy]
startCommand = "php artisan migrate --force && php artisan serve --host=0.0.0.0 --port=$PORT"
healthcheckPath = "/"
healthcheckTimeout = 100
restartPolicyType = "on_failure"
restartPolicyMaxRetries = 10

[environments.production.variables]
APP_ENV = "production"
APP_DEBUG = "false"
LOG_CHANNEL = "stderr"
LOG_LEVEL = "error"
SESSION_DRIVER = "database"
CACHE_STORE = "database"
QUEUE_CONNECTION = "database"
FILESYSTEM_DISK = "local"
DB_CONNECTION = "pgsql"

[environments.production.build]
buildCommand = "composer install --optimize-autoloader --no-dev && npm ci && npm run build && php artisan config:cache && php artisan route:cache && php artisan view:cache"

[environments.staging.variables]
APP_ENV = "staging" 
APP_DEBUG = "true"
LOG_LEVEL = "debug"

# Optional: If you want to use a specific PHP version
# [build.nixpacksConfig]
# providers = ["php", "nodejs"] 