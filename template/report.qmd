.include {setup.qmd}

.include {header.qmd}

.tableofcontents

# Analisi dei requisiti

Si vuole sviluppare un software che permetta la gestione di un'officina meccanica per motocicli e faciliti 
le operazioni organizzative per ridurre notevolmente il carico di lavoro e il rischio di perdita e/o dimenticanza 
di informazioni. I dati manipolati comprendono diversi domini (interventi, ricambi, fatturazione) e sono specifici
in base all'utilizzatore.  
Infatti il gestionale potrà essere utilizzato anche dai clienti per agire in autonomia e diminuire ulteriormente
l'intervento umano da parte dell'officina.

## Intervista

Si riporta in seguito la trascrizione dell'intervista effettuata col proprietario dell'officina.  

.html
    <br>
    <em>
    Il titolare di un'officina desidera snellire la gestione quotidiana della propria attività. Racconta che, al momento,
    tutte le informazioni su clientela, motociclette, appuntamenti e ricambi vengono annotate su fogli di calcolo e agende cartacee,
    con il rischio costante di errori, sovrapposizioni o semplici dimenticanze.
    Egli spiega che i clienti, prima di tutto, devono potersi registrare online inserendo i propri dati anagrafici e di contatto.
    Una volta registrato, il cliente ha la possibilità di aggiungere le sue moto a un garage virtuale, specificando targa, marca,
    modello e qualche nota personale. In questo modo lo staff può visualizzare lo storico della moto per aiutare con diagnosi di problemi futuri.  

    Il passo successivo riguarda la prenotazione degli appuntamenti. Il titolare sottolinea l’esigenza di un calendario che mostri
    le fasce orarie libere per interventi di manutenzione ordinaria o per prove al banco.
    Inoltre il cliente deve poter disdire in autonomia. Al momento della richiesta, il sistema deve salvare l'appuntamento in
    uno stato di "attesa di conferma" che l’officina potrà poi convertire in "confermato" oppure rifiutare, tenendo conto della
    disponibilità dei meccanici e della complessità del lavoro.  
    Durante il lavoro sulla moto, il proprietario vuole registrare uno o più tecnici assegnati, annotare ogni fase dell’intervento
    e i ricambi utilizzati. Serve aggiornare lo stato in tempo reale per permettere ai clienti di rimanere aggiornati senza disturbare l'officina.
    Terminato l’intervento, il sistema deve permettere di generare una fattura intestata al cliente, includendo manodopera ed eventuali ricambi utilizzati.

    Un’altra criticità evidenziata riguarda il magazzino: ricambi di varia natura, ciascuno con disponibilità, codice fornitore e categoria.
    Occorre un modulo di inventario con soglie di riordino e storico degli acquisti presso fornitori diversi. Il titolare desidera inoltre
    mettere in relazione ogni ricambio con i modelli di moto compatibili, così da evitare errori di montaggio.  
    Sul fronte amministrativo, l’officina impiega alcuni operai e un addetto alla reception che deve poter gestire assunzioni, turni
    e assegnazioni ai lavori. Per questo si richiede una sezione dedicata allo staff, con ruoli differenziati (meccanico, amministratore)
    e permessi di accesso mirati: ad esempio, solo l’amministratore emette fatture, mentre i meccanici aggiornano lo stato dei lavori a loro assegnati.  
    Infine, il titolare vorrebbe un cruscotto riepilogativo che mostri a colpo d’occhio appuntamenti imminenti, lavori in corso,
    ricavi mensili e ricambi sotto scorta minima.
    </em>

## Rilevamento delle ambiguità ed estrazione dei concetti principali

Un'analisi testuale dell'intervista ha portato alla luce diverse ambiguità elencate di seguito.

.tablesort {1}
    .csv {tables/concepts.csv} caption:{concetti.}


## Ridefinizione delle specifiche in linguaggio naturale 

I **Clienti** rappresentano i proprietari delle motociclette che si registrano nel sistema fornendo i propri dati anagrafici e di contatto.
Ogni cliente può possedere una o più **Motociclette**, caratterizzate da targa, marca, modello e note personali.
Gli **Appuntamenti** costituiscono il collegamento tra clienti e officina, permettendo la prenotazione di interventi di manutenzione
(ordinaria o straordinaria) o prove al banco. Ogni appuntamento è associato a una specifica motocicletta e può trovarsi in diversi stati
(in attesa di conferma, in progesso, completato, annullato). Durante la fase operativa, gli appuntamenti si trasformano in **Interventi** veri e propri,
ai quali vengono assegnati uno o più **Tecnici** responsabili dell'esecuzione del lavoro.  
Il **Magazzino** gestisce i **Ricambi**, ognuno identificato da un codice fornitore, categoria e livello di disponibilità. Esiste una
relazione di compatibilità tra ricambi e modelli di motociclette per evitare errori di montaggio. Durante gli interventi, i ricambi
utilizzati vengono registrati e collegati sia all'intervento che al fornitore di provenienza con i relativi prezzi.  
Il **Personale** dell'officina comprende tecnici con diversi ruoli e permessi di accesso differenziati. Gli amministratori
hanno accesso completo al sistema inclusa la generazione di fatture, mentre i tecnici possono aggiornare lo stato dei lavori a
loro assegnati. Il sistema di **Fatturazione** collega gli interventi completati ai relativi clienti,
includendo il calcolo della manodopera e dei ricambi utilizzati. Un **Dashboard** amministrativo fornisce una visione
d'insieme delle attività correnti, appuntamenti, ricavi e stato del magazzino.

##### Operazioni principali da implementare:

1. Registrazione e autenticazione di clienti e personale
2. Gestione del garage digitale con inserimento e modifica dati delle motociclette
3. Prenotazione, conferma e cancellazione appuntamenti
4. Assegnazione tecnici agli interventi e aggiornamento stato lavori
5. Gestione inventario ricambi con soglie di riordino
6. Registrazione acquisti da fornitori e storico movimenti magazzino
7. Generazione fatture per interventi completati
8. Visualizzazione dashboard con indicatori di performance
9. Gestione ruoli e permessi del personale
10. Tracciamento storico interventi per ogni motocicletta
11. Visualizzare lo stato di un invertento sulla propria moto

# Progettazione Concettuale

## Persone

### Schema scheletro

Un primo sviluppo legato al dominio del problema produce il seguente schema.

![ER](imgs/scheletroP.png "Scheletro per la modellazione delle persone")

### Raffinamenti proposti

Si nota fin da subito la necessità di dividere l'entità **persona** in in due sotto entità per distinguere i clienti dai dipendenti dell'officina. Inoltre, data la descrizione del dominio, si vogliono distinguere i lavori in base al tipo di intervento, quindi sessione a banco oppure manutenzione.

![ER](imgs/rifinitoP.png "Schema rifinito")

## Persone

### Schema scheletro

Un primo sviluppo legato al dominio del problema produce il seguente schema.

![ER](imgs/scheletroP.png "Scheletro per la modellazione delle persone")

### Raffinamenti proposti

Si nota fin da subito la necessità di dividere l'entità **persona** in in due sotto entità per distinguere i clienti dai dipendenti dell'officina. Inoltre, data la descrizione del dominio, si vogliono distinguere i lavori in base al tipo di intervento, quindi sessione a banco oppure manutenzione.

![ER](imgs/rifinitoP.png "Schema rifinito")


## Schema concettuale finale

![ER](imgs/finale.png "Inserire qui lo schema concettuale finale")



# Progettazione logica

## Stima del volume dei dati

.tablesort {1}
    .csv {tables/volumes.csv} caption:{volumi di dati.}

## Descrizione delle operazioni principali e stima della loro frequenza

.tablesort {1}
    .csv {tables/operations.csv} caption:{frequenza operazioni.}

[Inserire qui la descrizione delle operazioni principali e la stima della loro frequenza.]

## Schemi di navigazione e tabelle degli accessi

#####! OP 1 - Operazione 1
[Inserire qui descrizione operazione 1]
| Concetto | Tipo | Accessi | Operazione 
|----------|------|---------|------------
| Concetto1 | E | 1 | L
| Concetto2 | R | 2 | S

.center
    [Totale costo operazione 1]

#####! OP 2 - Operazione 2
[Inserire qui descrizione operazione 2]
| Concetto | Tipo | Accessi | Operazione 
|----------|------|---------|------------
| Concetto1 | E | 1 | L
| Concetto2 | R | 2 | S

.center
    [Totale costo operazione 2]

![ER](imgs/navigazione2.png "Inserire qui lo schema di navigazione dell'operazione 2")


## Raffinamento dello schema

#### Eliminazione degli attributi composti
.loremipsum

#### Eliminazione di identificatori esterni
.loremipsum

#### Eliminazione gerarchie
.loremipsum

#### Scelta delle chiavi 
.loremipsum

## Analisi delle ridondanze

[Inserire qui l'elenco delle ridondanze presenti.]

#####! OP 1 - Operazione 1
[Inserire qui descrizione della ridondanza nell'operazione 1 (contando le ridondanze)]
| Concetto | Tipo | Accessi | Operazione 
|----------|------|---------|------------
| Concetto1 | E | 1 | L
| Concetto2 | R | 2 | S

.center
    [Totale costo operazione 1]

[Inserire qui descrizione della ridondanza nell'operazione 1 (senza le ridondanze)]
| Concetto | Tipo | Accessi | Operazione 
|----------|------|---------|------------
| Concetto1 | E | 1 | L
| Concetto2 | R | 2 | S

.center
    [Totale costo operazione 1]

#####! OP 2 - Operazione 2
[Inserire qui descrizione operazione 2 (contando le ridondanze)]
| Concetto | Tipo | Accessi | Operazione 
|----------|------|---------|------------
| Concetto1 | E | 1 | L
| Concetto2 | R | 2 | S

.center
    [Totale costo operazione 2]

[Inserire qui descrizione operazione 2 (senza le ridondanze)]
| Concetto | Tipo | Accessi | Operazione 
|----------|------|---------|------------
| Concetto1 | E | 1 | L
| Concetto2 | R | 2 | S

.center
    [Totale costo operazione 2]

## Traduzione di entità e associazioni in relazioni

[Inserire qui la traduzione di entità e associazioni in relazioni.]

## Schema relazionale finale

![RL](imgs/relazionale.png "Inserire qui lo schema relazionale")

## Traduzione delle operazioni in query SQL

##### OP 1 - Operazione 1
[Inserire qui commenti aggiuntivi per l'operazione 1 se necessari.]

.code {sql}
    SELECT code
    FROM goes
    WHERE here  


##### OP 2 - Operazione 2
[Inserire qui commenti aggiuntivi per l'operazione 2 se necessari.]

.code {sql}
    SELECT code
    FROM goes
    WHERE here


# Progettazione dell'applicazione

## Descrizione dell'architettura dell'applicazione realizzata

[Inserire qui la descrizione dell'architettura dell'applicazione realizzata]

## Guida utente

[Inserire qui una breve descrizione o demo dell'utilizzo dell'applicazione.]

![screenshot](imgs/screenshot.png "Inserire qui screenshot dell'applicazione")